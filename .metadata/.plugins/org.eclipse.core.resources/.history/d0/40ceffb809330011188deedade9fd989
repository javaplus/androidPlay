package com.bkids.framework.impl;

import java.io.IOException;
import java.io.InputStream;

import android.content.res.AssetManager;
import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.BitmapFactory.Options;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Rect;

import com.bkids.framework.Graphics;
import com.bkids.framework.Pixmap;

public class AndroidGraphics implements Graphics {

	AssetManager assetManager;
	Bitmap frameBuffer;
	Canvas canvas;
	Paint paint;
	Rect srcRect = new Rect();
	Rect dstRect = new Rect();
	
	
	public AndroidGraphics(AssetManager assets, Bitmap frameBuffer){
		
		this.assetManager = assets;
		this.frameBuffer = frameBuffer;
		this.canvas = new Canvas(frameBuffer);
		this.paint = new Paint();
	}
	
	public Pixmap newPixmap(String fileName, PixmapFormat format) {
		
		Config config = null;
		if(format == PixmapFormat.RGB565){
			config = Config.RGB_565;
		}else if(format ==PixmapFormat.ARGB4444){
			config = Config.ARGB_4444;
		}else{
			config = Config.ARGB_8888;
		}
		Options options = new Options();
		options.inPreferredConfig = config;
		InputStream in = null;
		Bitmap bitmap = null;
		try {
			in = assetManager.open(fileName);
			bitmap = BitmapFactory.decodeStream(in,null, options);
			if(bitmap==null){
				throw new RuntimeException("Couldn't load bitmap from asset '" + fileName + "'");
			}
			
		} catch (IOException e) {
			throw new RuntimeException("Couldn't load bitmap from asset '" + fileName + "'");
		}finally{
			if(in!=null){
				try {
					in.close();	
				} catch (IOException e2) {
					// TODO: handle exception
				}
				
			}
		}
		if(bitmap.getConfig() == Config.RGB_565){
			format = PixmapFormat.RGB565;
		}else if(bitmap.getConfig() == Config.ARGB_4444){
			format = PixmapFormat.ARGB4444;
		}else{
			format = PixmapFormat.ARGB8888;
		} 
		
		return new AndroidPixmap(bitmap, format);
		
	}

	/**
	 * Paint the entire frameBuffer with the specified color.
	 */
	public void clear(int color) {
		// extract our individual R G and B color values from our color value
		canvas.drawRGB((color & 0xff0000) >> 16, (color & 0xff00)>>8, (color & 0xff));

	}

	public void drawPixel(int x, int y, int color) {
		// TODO Auto-generated method stub

	}

	public void drawLine(int x, int y, int x2, int y2, int color) {
		// TODO Auto-generated method stub

	}

	public void drawRect(int x, int y, int width, int height, int color) {
		// TODO Auto-generated method stub

	}

	public void drawPixmap(Pixmap pixmap, int x, int y, int srcX, int srcY,
			int srcWidth, int srcHeight) {
		// TODO Auto-generated method stub

	}

	public void drawPixmap(Pixmap pixmap, int x, int y) {
		// TODO Auto-generated method stub

	}

	public int getWidth() {
		// TODO Auto-generated method stub
		return 0;
	}

	public int getHeight() {
		// TODO Auto-generated method stub
		return 0;
	}

}
